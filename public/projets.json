[
  {
    "id": 1,
    "nom": "Portfolio",
    "categorie": "Projet personnel, évaluation finale, école",
    "ue": "Développer, Entreprendre",
    "task": "",
    "livrable": "",
    "analyse": "",
    "methode": "",
    "savoirs": "",
    "ressources": "",
    "ameliorations": "",
    "CEAC": "",
    "role": "",
    "apprentissage": "",
    "image": "",
    "lien": ""
  },
  {
    "id": 2,
    "nom": "Stratégie TikTok",
    "categorie": "Entreprise, évaluation continue",
    "ue": "Entreprendre",
    "task": "Développer une stratégie TikTok innovante pour accroître l'engagement et la visibilité de la station, en s’appuyant sur des tendances actuelles et du contenu créatif, alignée avec les objectifs marketing et de communication.",
    "livrable": "Stratégie TikTok",
    "analyse": "Dans le cadre de mon alternance, j’ai été chargé de développer une stratégie TikTok permettant de moderniser l’image de la station de Pralognan-la-Vanoise et d’attirer une audience plus jeune. Ce projet a impliqué plusieurs étapes : analyse du marché et des tendances actuelles, création de contenu créatif, planification et diffusion du contenu, analyse des performances, engagement avec la communauté. Cette démarche cherche non seulement à contribuer à accroître la visibilité en ligne de la station, mais également à permis de diversifier ses canaux de communication pour s’adapter aux nouvelles attentes des touristes.",
    "methode": "Pour développer une stratégie TikTok efficace et alignée avec les objectifs de l’Office de Tourisme de Pralognan-la-Vanoise, j’ai suivi ces étapes : Analyse des tendances et benchmark : Étudier les tendances actuelles sur TikTok ainsi que les pratiques des concurrents et des marques similaires. Création de contenu : Élaborer des vidéos courtes et engageantes, en intégrant des éléments visuels et musicaux populaires sur la plateforme. Planification stratégique : Mettre en place un calendrier de publication adapté aux comportements de l’audience cible. Engagement communautaire : Interagir activement avec les utilisateurs pour renforcer les liens avec la communauté. Analyse de performance : Utiliser les outils d’analyse de TikTok pour évaluer les vidéos, identifier les contenus qui fonctionnent le mieux et ajuster la stratégie en conséquence.",
    "savoirs": "Savoirs : Connaissance des fonctionnalités de TikTok et des tendances spécifiques à la plateforme. Compréhension des techniques de storytelling adaptées au format court. Savoir-faire : Production de contenu vidéo : tournage, montage et optimisation pour TikTok. Utilisation d’analyses de performance pour ajuster la stratégie. Création d’une stratégie cohérente avec les objectifs marketing globaux. Savoir-être : Créativité : innover pour créer du contenu captivant et différenciant. Réactivité : s’adapter rapidement aux nouvelles tendances et opportunités. Collaboration : travailler avec l’équipe pour assurer la cohérence de la communication.",
    "ressources": "Ressources numériques : TikTok et ses outils d’analyse intégrés pour suivre les performances des vidéos. Outils de montage vidéo comme CapCut pour créer des vidéos adaptées au format TikTok. Sources d’inspiration : pages TikTok d’autres stations touristiques et créateurs populaires. Autres ressources : Collaborateurs : échanges avec l’équipe communication pour valider la stratégie et le contenu.",
    "ameliorations": "Diversification des contenus : Intégrer davantage de contenus générés par les utilisateurs (UGC) pour renforcer l’authenticité. Optimisation des collaborations : S’associer avec des influenceurs locaux ou spécialisés dans le domaine du tourisme. Automatisation des analyses : Utiliser des outils externes pour des rapports plus détaillés sur les performances. Mesure d’impact à long terme : Mettre en place des indicateurs pour évaluer l’impact de la stratégie sur la fréquentation touristique réelle.",
    "CEAC": "CE5.05 - Entreprendre dans le secteur du numérique en exploitant des cadres de réflexion français et internationaux. CE5.01 - Entreprendre dans le secteur du numérique en s'appuyant sur une veille technologique et des modèles de l’innovation. AC33.03 - Maitriser les étapes de production d’un projet multimédia. AC35.04 - Défendre un projet de manière convaincante.",
    "role": "Élaborer une stratégie TikTok innovante pour augmenter la visibilité et l'engagement de la station. Créer et planifier du contenu créatif basé sur les tendances TikTok actuelles. Analyser les performances des vidéos et ajuster la stratégie en fonction des insights recueillis. Engager la communauté et développer une interaction régulière avec les abonnés.",
    "apprentissage": "Utiliser TikTok comme outil marketing pour accroître la visibilité d'une marque.  Identifier et exploiter les tendances TikTok pour augmenter l'engagement. Analyser les données de performance sur TikTok et les utiliser pour optimiser le contenu. Gérer une communauté en ligne de manière active et interactive sur une plateforme en croissance rapide.",
    "image": "",
    "lien": ""
  },
  {
    "id": 3,
    "nom": "Chat Websocket",
    "categorie": "École, développement front",
    "ue": "Développer",
    "task": "Développer une application interactive en utilisant websocket.",
    "livrable": "Chat",
    "analyse": "Dans le cadre de la SAE R506, j’ai développé une application de chat en temps réel en utilisant les WebSockets. Ce projet avait pour objectif de permettre une communication instantanée entre plusieurs utilisateurs connectés à une même application. Le développement s’est déroulé en plusieurs étapes : mise en place du serveur WebSocket, développement côté serveur, développement côté client.Ce projet m’a permis d’approfondir mes compétences en développement temps réel, tout en mettant en œuvre une solution complète, allant de la gestion serveur à l’interface utilisateur.",
    "methode": "Pour développer l’application de chat en temps réel, j’ai adopté une approche itérative structurée en plusieurs étapes clés :  Conception du serveur WebSocket : Utilisation de Node.js et d’un module comme ws pour créer un serveur capable de gérer plusieurs connexions simultanées.  Développement côté serveur : Mise en place d’un système de gestion des événements pour recevoir et distribuer les messages à tous les utilisateurs connectés.  Développement côté client : Utilisation de JavaScript pour créer une interface utilisateur intuitive et gérer la communication en temps réel avec le serveur via les WebSockets.  Tests : Simulation de plusieurs utilisateurs pour vérifier la fluidité des échanges et identifier d’éventuels problèmes de performances. ",
    "savoirs": "Savoir-faire :  Implémentation d’un serveur WebSocket robuste avec Node.js.  Création d’une interface utilisateur dynamique avec HTML, CSS et JavaScript.  Gestion des événements en temps réel pour l’envoi et la réception de messages.  Savoir-être :  Organisation : planification des différentes étapes du développement pour respecter les délais.  Résolution de problèmes : identifier et corriger les erreurs liées à la gestion des connexions et des messages. ",
    "ressources": "Ressources techniques :  Documentation de Node.js et du module ws.  Tutoriels en ligne sur la mise en œuvre des WebSockets dans des applications web.  Outils de développement :  Environnement Node.js pour le développement et l’exécution du serveur.  Outils de débogage, comme les DevTools du navigateur, pour analyser les messages échangés.",
    "ameliorations": "Sécurité : Intégrer des mécanismes d’authentification et de chiffrement des messages pour protéger les données échangées.  Optimisation des performances : Tester l’application avec un plus grand nombre d’utilisateurs pour identifier et résoudre d’éventuels problèmes de scalabilité.  Fonctionnalités supplémentaires : Ajouter des fonctionnalités telles que les notifications de connexion/déconnexion ou encore la prise en charge des fichiers multimédias (images, vidéos).",
    "CEAC": "CE4.03 - Développer pour le web et les médias numériques en produisant un code fonctionnel, sobre et réutilisable.  AC34.02 - Développer à l’aide d’un framework de développement côté serveur",
    "role": "Développer une application de chat en temps réel en utilisant JavaScript et les WebSockets.  Concevoir l'interface utilisateur pour faciliter les échanges de messages entre les utilisateurs.  Gérer la communication en temps réel entre le client et le serveur via les WebSockets.",
    "apprentissage": "Utiliser les WebSockets pour maintenir une connexion en temps réel entre le client et le serveur.  Implémenter des fonctionnalités interactives en JavaScript pour un système de messagerie en direct.  Gérer l'envoi et la réception de données en temps réel dans une application multi-utilisateurs.",
    "image": "",
    "lien": ""
  },

  {
    "id": 4,
    "nom": "AéroGuide API",
    "categorie": "École, développement front, api",
    "ue": "Développer",
    "task": "Extraire les données d'une API et créer une interface utilisateur simple.",
    "livrable": "Application de recherche conditions météo et aéroports français.",
    "analyse": "Dans le cadre de la SAE R505, j’ai développé une application front-end permettant de rechercher des informations météorologiques et des détails sur les aéroports français à l’aide de l’API OpenDataSoft. Le projet s’est articulé autour de plusieurs étapes : connexion à l’API, traitement des données, conception de l’interface utilisateur, design interactif et responsive. Ce projet m’a permis de combiner des compétences en développement front-end et en manipulation d’API, tout en garantissant une expérience utilisateur intuitive et performante.",
    "methode": "Pour développer l’application front-end permettant de rechercher des informations sur les aéroports et les conditions météo, j’ai procédé en plusieurs étapes : Analyse des besoins : Identifier les données nécessaires à extraire depuis l’API OpenDataSoft. Connexion à l’API : Configurer les appels API avec Axios pour récupérer les données au format JSON. Traitement des données : Manipuler et formater les informations (dates, météo, détails des aéroports) pour les rendre lisibles. Conception de l’interface : Utiliser Vue.js pour développer des composants dynamiques et rendre l’application interactive. Amélioration de l’expérience utilisateur : Intégrer un design responsive, gérer les erreurs de requêtes. ",
    "savoirs": "Savoirs : Connaissance des outils front-end comme Vue.js et une bibliothèque telle qu'Axios. Savoir-faire : Implémentation des requêtes asynchrones pour récupérer les données via une API. Manipulation et formatage des dates en utilisant des bibliothèques adaptées pour la localisation en français. Conception d’une interface utilisateur interactive et responsive. Savoir-être : Autonomie : recherche des meilleures pratiques pour manipuler les données et gérer les erreurs API. Rigueur : garantir une expérience utilisateur cohérente en testant les fonctionnalités et en optimisant les performances. Créativité : concevoir une interface attrayante et fonctionnelle pour présenter les données de manière intuitive. ",
    "ressources": "Ressources techniques : Guides et tutoriels sur Vue.js, Axios et date-fns. Outils de développement : Visual Studio Code. Navigateurs avec DevTools pour tester l’affichage et déboguer les fonctionnalités. ",
    "ameliorations": "Fonctionnalités supplémentaires : Ajouter des filtres pour trier les aéroports selon des critères spécifiques. Optimisation des performances : Implémenter la pagination ou la mise en cache des données pour réduire les temps de chargement. Accessibilité : Veiller à rendre l’application utilisable par les personnes en situation de handicap (navigation clavier, lecteurs d’écran). ",
    "CEAC": "CE4.03 - Développer pour le web et les médias numériques en produisant un code fonctionnel, sobre et réutilisable. AC34.01 - Développer à l’aide d’un framework de développement côté client.",
    "role": "Développer une interface utilisateur pour extraire des données météorologiques d'une API.  Implémenter des fonctionnalités pour formater et afficher des informations sur les aéroports français.  Gérer les erreurs lors de la récupération des données. Intégrer la date et les informations météorologiques dans un format lisible en français. Améliorer l'expérience utilisateur avec un design interactif et responsive. ",
    "apprentissage": "Utiliser l'API d'OpenDataSoft pour récupérer des informations météo et des données sur les aéroports. Manipuler les dates et les formats en utilisant date-fns pour localiser les formats en français.  Gérer les requêtes API asynchrones avec axios et traiter les réponses JSON.  Créer et afficher dynamiquement des informations via des composants Vue.js. Développer une interface responsive avec une interaction utilisateur fluide (animations, gestion des erreurs, boutons réactifs). ",
    "image": "",
    "lien": ""
  },
  {
    "id": 5,
    "nom": "Collaboration SAE501",
    "categorie": "Gestion de projet, Notion, école, évaluation",
    "ue": "Entreprendre",
    "task": "Participation collaborative à la gestion d’un projet via un logiciel spécialisé.",
    "livrable": "Création de l’espace Notion",
    "analyse": "Avant de débuter le projet, j’ai participé à la mise en place de toute la gestion du projet via un logiciel spécialisé (Notion). Notion est un outil de gestion de projet performant et complet. Dans le cadre de la SAE501, j’ai utilisé le logiciel pour mettre en forme de cahier des charges, lister l’ensemble des tâches à réaliser dans un tableau Kanban en les associant à un lot, une personne, une date…, lister les coût de fabrication matériel d’un projet comme celui-ci.",
    "methode": "Pour ce projet, j'ai adopté une méthode collaborative basée sur l'utilisation de l'outil Notion. Cette approche a consisté à : Structurer un espace de travail avec des pages dédiées (cahier des charges, tableau Kanban, budget). Définir les priorités et organiser les tâches critiques par ordre d’importance. Assigner les rôles et les responsabilités aux membres du groupe de manière équitable. Assurer un suivi régulier de l’avancement pour ajuster les plannings si nécessaire.",
    "savoirs": "Savoirs : Maîtrise des fonctionnalités avancées de Notion pour la gestion de projets.Connaissances en estimation budgétaire et planification de projet. Savoir-faire : Structuration et organisation d’un espace collaboratif numérique. Gestion et suivi des tâches via un tableau Kanban. Analyse et priorisation des étapes critiques du projet. Savoir-être : Collaboration : travail en équipe pour répartir les rôles et responsabilités. Adaptabilité : ajustement des plannings face aux imprévus. Proactivité : anticipation des besoins et des ressources pour éviter les blocages.",
    "ressources": "Logiciel utilisé : Notion, pour sa polyvalence et ses outils adaptés à la gestion collaborative de projet. Ressources numériques : Tutoriels et guides en ligne pour approfondir ma maîtrise de Notion. Support humain : Échanges réguliers avec les membres de l’équipe pour coordonner les efforts et recueillir des suggestions.",
    "ameliorations": "Intégrer des outils complémentaires à Notion, comme des logiciels de suivi de temps pour optimiser la gestion des délais. Mieux anticiper les imprévus en planifiant des marges de manœuvre pour les tâches critiques. Documenter les apprentissages et les retours d’expérience pour affiner les processus de gestion lors de futurs projets.",
    "CEAC": "CE4.04 - Développer pour le web et les médias numériques en utilisant les outils favorisant un développement itératif et collaboratif. CE5.02 - Entreprendre dans le secteur du numérique en favorisant la collaboration entre les parties prenantes du projet. AC35.01 - Piloter un produit, un service ou une équipe.",
    "role": "La configuration de l’espace Notion : création des pages principales (cahier des charges, Kanban, budget). La définition des priorités : identification des tâches critiques et planification de leur réalisation. L’attribution des rôles et des responsabilités (en collaboration avec le groupe) : affectation des tâches. La vérification de l’avancement : suivi régulier des progrès et ajustements en cas de besoin.",
    "apprentissage": "Utilisation avancée de Notion : structurer efficacement un espace de travail collaboratif pour gérer un projet complexe. Importance de la planification : anticiper les étapes clés du projet pour minimiser les retards et les conflits. Estimation budgétaire : établir un budget prévisionnel réaliste. Adaptabilité : ajuster les plannings et les rôles en fonction des imprévus et des changements dans le projet.",
    "image": "",
    "lien": ""
  },
  {
    "id": 6,
    "nom": "Direction aristique SAE501",
    "categorie": "UI/UX, école, évaluation, développement front",
    "ue": "Développer",
    "task": "Concevoir la direction artistique du projet : créer une charte graphique, concevoir des maquettes et animer des prototypes, puis intégrer.",
    "livrable": "Charte Graphique, Maquettes, Prototypes et Intégration",
    "analyse": "Dans le cadre de la SAE501, j’ai été en charge de la conception de la direction artistique et du développement front-end de l’application. Direction artistique : J’ai conçu une charte graphique pour définir l’identité visuelle du projet, incluant une palette de couleurs, des typographies adaptées,… Cette charte a servi de base à toutes les déclinaisons visuelles du projet. Maquettes : À l’aide de Figma, j’ai créé des maquettes pour les différentes interfaces interactives de la table. Intégration et développement front-end : À partir des maquettes validées, j’ai développé l’interface utilisateur avec React intégré au framework Next.js. J’ai utilisé SCSS pour la gestion des styles, ce qui m’a permis de structurer le code CSS efficacement grâce aux fonctionnalités comme les variables, les mixins, et les règles imbriquées. Ce projet a permis de combiner une réflexion artistique approfondie et une mise en œuvre technique rigoureuse, tout en garantissant une cohérence entre les étapes de conception et de développement. ",
    "methode": "Pour ce lot, j’ai suivi une méthode de conception centrée sur l’utilisateur, en passant par plusieurs étapes clés : Direction artistique : Élaboration d’une charte graphique définissant les bases visuelles du projet (palette de couleurs, typographies). Maquettage : Création de maquettes sur Figma pour visualiser les interfaces. Développement front-end : Intégration des maquettes avec React et Next.js, tout en utilisant SCSS pour structurer et optimiser les styles. Tests et ajustements : Validation de l’expérience utilisateur à travers des tests réguliers et correction des éventuels problèmes.",
    "savoirs": "Savoirs : Connaissances en design UX/UI (charte graphique, ergonomie). Bases technique en SCSS. Savoir-faire : Création d’une charte graphique cohérente et adaptée. Conception de maquettes interactives et prototypage sur Figma. Développement front-end optimisé et structuration efficace des styles. Savoir-être : Collaboration : échanges réguliers avec l’équipe pour aligner la vision graphique et technique. Rigueur : assurer une cohérence entre chaque étape du processus, de la conception à l’intégration. Curiosité : explorer et expérimenter les fonctionnalités avancées des outils utilisés.",
    "ressources": "Logiciels :Figma : pour concevoir les maquettes et prototypes interactifs. React et Next.js : pour le développement front-end de l’application. SCSS : pour la gestion avancée des styles CSS. Ressources numériques : Documentation officielle des outils (React, Next.js, SCSS). Tutoriels et guides en ligne  Ressources humaines : Explications de mes partenaires de travail.",
    "ameliorations": "Amélioration des animations en explorant des bibliothèques pour enrichir les transitions et interactions de l’application.",
    "CEAC": "CE4.03 - Développer pour le web et les médias numériques en produisant un code fonctionnel, sobre et réutilisable. AC34.01 - Développer à l’aide d’un framework de développement côté client",
    "role": "Conception graphique : Élaborer une charte graphique complète, incluant couleurs, typographies et éléments visuels. Maquettes : Créer des maquettes interactives. Développement front-end : Intégrer les maquettes avec React et Next.js, Optimiser les styles avec SCSS pour assurer une meilleure gestion des styles. Collaboration : Communiquer avec les membres de l’équipe pour aligner les objectifs visuels et techniques du projet. Tests et corrections : Mener des tests de l’application pour ajuster l’interface et optimiser l’expérience utilisateur.",
    "apprentissage": "Outils de conception UX/UI : Utiliser Figma pour créer des maquettes et prototypes interactifs. Gestion de projets design-techniques : Faire le lien entre les étapes de conception graphique et le développement technique. Développement front-end : Intégrer des interfaces en utilisant React avec le framework Next.js, favorisant un rendu rapide et dynamique. Gestion des styles avec SCSS : Utiliser des variables pour centraliser les couleurs, typographies, taille de textes et espaces, des mixins pour réutiliser des blocs de styles, et organiser le CSS pour une meilleure lisibilité et maintenabilité.",
    "image": "",
    "lien": ""
  },
  {
    "id": 7,
    "nom": "Local storage SAE501",
    "categorie": "École, développement back, évaluation",
    "ue": "Développer",
    "task": "Manipuler le Local Storage et créer des fonctions dynamiques",
    "livrable": "Amélioration de l’expérience utilisateur : création d’un pop-up afin d’indiquer le gagnant. Affiche du gagnant et du perdant dans leurs pages respectives.",
    "analyse": "Afin d’améliorer l’expérience utilisateur, j’ai mis en œuvre une gestion des scores dynamique en utilisant le localStorage pour stocker, comparer et afficher les données. Système de gestion des scores : Grâce au localStorage, j’ai conçu un mécanisme permettant de sauvegarder les scores des joueurs localement dans le navigateur. Cela a permis de conserver les données, même après un rechargement de la page. Pop-up pour l’annonce du vainqueur : J’ai développé un système d’affichage interactif sous forme de pop-up qui se déclenche automatiquement à la fin du jeu pour annoncer le vainqueur.",
    "methode": "Pour ce lot, j’ai adopté une approche centrée sur l’expérience utilisateur et basée sur des solutions dynamiques : Analyse des besoins : Identifier les attentes des utilisateurs, notamment la persistance des scores et l’affichage des résultats. Utilisation du localStorage : Développer un système pour stocker et comparer les scores de manière locale et persistante. Création d’un pop-up : Concevoir une fenêtre interactive s’affichant à la fin du jeu pour annoncer le vainqueur. Personnalisation des pages : Exploiter les données du localStorage pour afficher le gagnant et le perdant sur leurs pages respectives.",
    "savoirs": "Savoirs : Concepts basiques de l’interactivité utilisateur (pop-ups, navigation dynamique). Savoir-faire : Développement d’un système pour sauvegarder les scores des joueurs. Intégration d’un pop-up pour améliorer l’expérience utilisateur. Personnalisation des pages via des données locales. Savoir-être : Esprit d’analyse : évaluer les besoins des utilisateurs pour développer des fonctionnalités adaptées. Collaboration : travailler en équipe pour s’assurer de la cohérence avec les autres parties du projet. Proactivité : proposer des solutions créatives pour optimiser l’expérience utilisateur.",
    "ressources": "Technologies utilisées : localStorage : pour la gestion locale des données utilisateur. JavaScript : pour développer des fonctionnalités dynamiques et interactives. HTML/CSS : pour concevoir et personnaliser les pages utilisateur. Ressources numériques : Documentation sur le localStorage et JavaScript. Tutoriels en ligne pour développer des pop-ups. Ressources humaines : Explications de mes partenaires de travail.",
    "ameliorations": "Ajout d’animations : enrichir l’expérience utilisateur avec des animations pour les transitions et l’apparition des pop-ups.",
    "CEAC": "AC34.02 - Développer à l’aide d’un framework de développement côté serveur. CE4.03 - Développer pour le web en produisant un code fonctionnel, efficace et réutilisable.",
    "role": "Gestion des scores : Implémenter un système de sauvegarde et de comparaison des scores avec le localStorage pour assurer une expérience utilisateur fluide. Pop-up : Développer un pop-up dynamique pour annoncer les résultats en temps réel. Personnalisation des pages : Utilisation du localStorage pour rappeler le gagnant et le perdant sur 2 pages distinctes.",
    "apprentissage": "Gestion des données locales : Utiliser le localStorage pour stocker et manipuler des données de manière persistante dans le navigateur. Développement interactif : Concevoir et intégrer des fonctionnalités tel qu’un pop-up pour améliorer l’expérience utilisateur. Personnalisation UX/UI : Créer des interfaces adaptées aux différents scénarios utilisateur. Travail en équipe : Gérer une partie du projet tout en s’assurant de l’alignement avec les autres membres de l’équipe.",
    "image": "",
    "lien": ""
  },
  {
    "id": 8,
    "nom": "Système Arduino SAE501",
    "categorie": "École, éléctronique, évaluation",
    "ue": "/",
    "task": "Comprendre le système Arduino et créer un premier branchement simple.",
    "livrable": "Allumer une LED à l’aide d’un bouton poussoir.",
    "analyse": "N’ayant jamais travaillé avec Arduino auparavant, j’ai dû découvrir cette technologie depuis ses bases. Afin d’acquérir les connaissances nécessaires, j’ai suivi un tutoriel en ligne qui m’a guidé dans la réalisation d’un premier montage simple : allumer une LED à l’aide d’un bouton poussoir. Cette expérience pratique m’a permis de comprendre les concepts fondamentaux de l’électronique, tels que les circuits, les composants de base (LED, résistances, bouton poussoir), et les principes de programmation pour Arduino. Ce premier branchement avec une LED a constitué une étape clé, car il m’a permis de tester et valider le fonctionnement du circuit avant de remplacer la LED par une pompe dans la suite du projet. Ce premier projet m’a également aidé à renforcer ma logique et ma méthodologie dans un domaine complètement nouveau pour moi.",
    "methode": "Pour ce lot, j’ai adopté une démarche progressive, allant de la découverte à la réalisation : Apprentissage initial : Me familiariser avec l’écosystème Arduino (matériel et logiciel) à l’aide de tutoriels en ligne. Montage pratique : Réaliser un circuit simple combinant une LED, des résistances et un bouton poussoir. Programmation : Écrire un programme de base pour contrôler l’allumage de la LED via le bouton poussoir. Tests et ajustements : Identifier et corriger les erreurs potentielles dans le montage ou le code.",
    "savoirs": "Savoir-faire : Réalisation d’un circuit électronique fonctionnel sur breadboard. Programmation du microcontrôleur Arduino pour interagir avec des composants physiques. Débogage des erreurs techniques, tant au niveau matériel que logiciel. Savoir-être : Curiosité : explorer un domaine inconnu avec méthode. Persévérance : surmonter les difficultés liées à l’apprentissage d’une technologie nouvelle. Esprit critique : analyser les dysfonctionnements et tester des solutions.",
    "ressources": "Matériel utilisé : Carte Arduino Uno. LED, résistances, bouton poussoir. Breadboard et câbles de connexion. Logiciels et ressources : IDE Arduino pour l’écriture et l’envoi du code vers la carte. Tutoriels en ligne pour comprendre les bases d’Arduino et réaliser un premier montage.",
    "ameliorations": "Diversification des composants : Explorer l’utilisation d’autres composants électroniques (relais, capteurs). Documentation technique : Créer des schémas et notes pour expliquer le montage. Projets plus complexes : Développer des dispositifs interactifs impliquant plusieurs composants pour approfondir mes connaissances.",
    "CEAC": "AC34.03 - Développer des dispositifs interactifs sophistiqués",
    "role": "Apprendre et comprendre les bases d’Arduino grâce à des ressources en ligne. Réaliser un premier circuit simple intégrant une LED, des résistances et un bouton poussoir. Programmer le microcontrôleur Arduino pour gérer l’allumage et l’extinction de la LED via le bouton poussoir. Tester et ajuster le montage pour assurer son bon fonctionnement.",
    "apprentissage": "Bases d’Arduino : Configuration de l’environnement de développement (IDE Arduino), programmation de base en langage C/C++. Électronique : Compréhension des composants électroniques essentiels (LED, résistances, bouton poussoir) et de leur rôle dans un circuit. Montage de circuit : Utilisation d’une breadboard pour connecter les composants et créer un circuit fonctionnel. Débogage : Identifier et corriger les erreurs dans le montage ou le code pour garantir un fonctionnement optimal. Méthodologie : Suivre des tutoriels et structurer son apprentissage pour découvrir de nouveaux domaines techniques.",
    "image": "",
    "lien": ""
  },
  {
    "id": 9,
    "nom": "Modelisation 3D SAE501",
    "categorie": "École, modélisation 3D, évaluation",
    "ue": "/",
    "task": "Création de supports pour l’assemblage final.",
    "livrable": "Modèles 3D : supports pour les joysticks et les boutons, équerres pour sécuriser la télé.",
    "analyse": "Dans le cadre de la SAE501, j’ai conçu plusieurs modèles 3D destinés à garantir un assemblage final à la fois solide et esthétique pour notre table basse interactive. Mon travail s’est concentré sur la création de supports spécifiques : Supports pour les joysticks et les boutons, afin d’assurer leur fixation optimale tout en maintenant une ergonomie agréable. Équerres de fixation pour la télé, permettant de stabiliser l’écran sur la structure tout en renforçant sa durabilité. L’objectif principal était d’optimiser la fabrication additive en proposant des solutions à la fois simples, efficaces et adaptées aux besoins du projet. J’ai donc veillé à minimiser la quantité de matière utilisée pour garantir des impressions plus rapides et réduire l’impact environnemental lié à l’utilisation de filament plastique.",
    "methode": "Analyse des contraintes et besoins : Définition des dimensions et des formes requises pour assurer un assemblage fonctionnel et esthétique. Modélisation 3D : Création des pièces sur un logiciel de conception assistée par ordinateur (CAO), en intégrant les formes des joysticks et des boutons pour visualiser précisément l’assemblage. Optimisation des modèles : Réduction des supports inutiles et ajustement des structures pour limiter la consommation de filament tout en garantissant la solidité des pièces. Impression et tests : Fabrication des prototypes avec une imprimante 3D, ajustement des dimensions et validation de l’assemblage final.",
    "savoirs": "Savoir-faire : Modélisation 3D précise en respectant les contraintes de fabrication additive. Optimisation de l’impression 3D pour réduire le temps et la consommation de matériau. Ajustement et amélioration des prototypes en fonction des tests d’assemblage. Savoir-être : Rigueur : Respect des dimensions et des contraintes mécaniques pour un assemblage efficace. Esprit critique : Analyse des prototypes pour améliorer la solidité et l’ergonomie des pièces. Créativité : Conception de solutions innovantes alliant esthétique et praticité.",
    "ressources": "Matériel utilisé : Imprimante 3D, Filament, Outils de finition (cutter, lime, colle spécifique). Logiciels et ressources : Tinkercad.",
    "ameliorations": "Affiner davantage les modèles pour réduire encore plus la matière utilisée sans compromettre la solidité. Expérimenter d’autres matériaux pour améliorer la résistance des supports (ex. PETG pour une meilleure durabilité). Intégrer des fixations modulaires permettant des ajustements sans nécessiter de nouvelles impressions en cas de modification.",
    "CEAC": "/",
    "role": "Concevoir et modéliser les supports en 3D pour assurer un assemblage final optimal. Reproduire les formes des joysticks et des boutons afin de tester l’ergonomie et la compatibilité des pièces. Imprimer, tester et ajuster les prototypes pour garantir un résultat fonctionnel et esthétique.",
    "apprentissage": "Optimiser la modélisation 3D pour réduire la consommation de filament. Adapter les designs aux contraintes de la fabrication additive. Concevoir des supports solides tout en minimisant le poids des pièces. Tester et ajuster les prototypes en fonction des besoins d’assemblage. Améliorer l’ergonomie et la praticité des pièces grâce à des tests.",
    "image": "",
    "lien": ""
  },
  {
    "id": 10,
    "nom": "Schéma de cablage SAE501",
    "categorie": "École, modélisation 3D, évaluation",
    "ue": "/",
    "task": "Comprendre le système Arduino et réaliser un schéma de câblage.",
    "livrable": "Schéma de câblage.",
    "analyse": "Ayant travaillé avec Arduino sur un premier projet très simple (LED + bouton), j’ai souhaité approfondir mes connaissances en électronique en intégrant un relais et une pompe à mon circuit. L’objectif était de créer un montage permettant de commander une pompe électrique à l'aide d'une carte Arduino et d'un relais. Cette expérience m’a permis de mieux comprendre l’utilisation du relais, son fonctionnement et son intégration dans un circuit électronique.",
    "methode": "Recherche préliminaire : Comprendre le fonctionnement du relais et son intégration avec Arduino. Schéma de câblage : Réalisation d'un circuit connectant la pompe, le relais, l’alimentation et l’Arduino sur une breadboard. Tests et ajustements : Vérification du bon fonctionnement du circuit et corrections des erreurs potentielles.",
    "savoirs": "Savoir-faire : Comprendre le fonctionnement des relais et de leur interaction avec Arduino. Réaliser un montage électronique intégrant un relais et une pompe. Coder une logique de contrôle de relais via Arduino. Savoir-être : Curiosité : Explorer de nouveaux composants électroniques. Rigueur : Vérifier les branchements pour éviter tout court-circuit. Persévérance : Surmonter les difficultés liées aux tests et aux ajustements.",
    "ressources": "Matériel utilisé : Carte Arduino Uno, Relais, Pompe électrique, Breadboard et fils de connexion, Alimentation externe pour la pompe. Logiciels et ressources : Tutoriels en ligne sur l'utilisation des relais avec Arduino.",
    "ameliorations": "Tester avec différents types de relais pour optimiser le circuit.",
    "CEAC": "AC34.03 - Développer des dispositifs interactifs sophistiqués.",
    "role": "Comprendre et tester le fonctionnement d'un relais. Réaliser le schéma de câblage pour contrôler une pompe à l’aide d’un relais et d’une carte Arduino. Tester et ajuster le montage pour garantir son bon fonctionnement.",
    "apprentissage": "Utilisation des relais : Comprendre leur fonctionnement et leur intégration dans un circuit Arduino. Branchement de composants électromécaniques : Relier une pompe à un relais et une carte Arduino. Tests et débogage : Identifier et corriger les problèmes de montage et de code.",
    "image": "",
    "lien": ""
  },
  {
    "id": 11,
    "nom": "Maze",
    "categorie": "École, développement back, algorithmie, Unity, évaluation",
    "ue": "Développer",
    "task": "",
    "livrable": "",
    "analyse": "",
    "methode": "",
    "savoirs": "",
    "ressources": "",
    "ameliorations": "",
    "CEAC": "",
    "role": "",
    "apprentissage": "",
    "image": "",
    "lien": ""
  }
]
